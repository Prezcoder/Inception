version: '3'

networks:
  inception:
    name: inception
    driver: bridge

volumes:
  wordpress:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/fbouchar/data/wordpress'
  mariadb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/fbouchar/data/mariadb'

services:
  nginx:
    container_name: NGINX
    build: ./requirements/nginx/
    image: nginx
    depends_on:
      - wordpress
    env_file:
      - .env
    ports:
      - "443:443"
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    restart: on-failure

  mariadb:
    container_name: MariaDB
    build: ./requirements/mariadb
    image: mariadb
    networks:
      - inception
    ports:
      - "3306:3306"
    env_file:
      - .env
    restart: on-failure
    volumes:
      - mariadb:/var/lib/mysql

  wordpress:
    container_name: WordPress
    build: ./requirements/wordpress
    image: wordpress
    networks:
      - inception
    ports:
      - "9000:9000"
    env_file:
      - .env
    depends_on:
      - mariadb
    restart: on-failure
    volumes:
      - wordpress:/var/www/wordpress

# Ce code est un fichier de configuration Docker Compose utilisé pour orchestrer plusieurs conteneurs Docker qui ensemble forment un environnement pour héberger un site WordPress. Voici ce que chaque section du code fait :

# 1. **Définition des réseaux et volumes :**
#    - Crée un réseau Docker nommé "inception" avec le pilote bridge pour connecter les conteneurs entre eux.
#    - Crée deux volumes Docker nommés "wordpress" et "mariadb" qui sont montés respectivement sur `/var/www/wordpress` et `/var/lib/mysql` dans les conteneurs.

# 2. **Services :**
#    - **nginx :**
#      - Crée un conteneur nommé "nginx" basé sur l'image Docker "nginx" et construit à partir du fichier Dockerfile spécifié (`./requirements/nginx/`).
#      - Définit les dépendances sur le service "wordpress".
#      - Utilise un fichier `.env` pour charger les variables d'environnement.
#      - Expose le port 443 de l'hôte sur le port 443 du conteneur.
#      - Monte le volume "wordpress" dans le conteneur pour héberger les fichiers WordPress.
#      - Utilise le réseau "inception".
#      - Redémarre le conteneur en cas d'échec.

#    - **mariadb :**
#      - Crée un conteneur nommé "mariadb" basé sur l'image Docker "mariadb" et construit à partir du fichier Dockerfile spécifié (`./requirements/mariadb`).
#      - Utilise le réseau "inception".
#      - Expose le port 3306 de l'hôte sur le port 3306 du conteneur pour la base de données MySQL.
#      - Utilise un fichier `.env` pour charger les variables d'environnement.
#      - Redémarre le conteneur en cas d'échec.
#      - Monte le volume "mariadb" dans le conteneur pour stocker les données de la base de données.

#    - **wordpress :**
#      - Crée un conteneur nommé "wordpress" basé sur l'image Docker "wordpress" et construit à partir du fichier Dockerfile spécifié (`./requirements/wordpress`).
#      - Utilise le réseau "inception".
#      - Expose le port 9000 de l'hôte sur le port 9000 du conteneur.
#      - Utilise un fichier `.env` pour charger les variables d'environnement.
#      - Définit les dépendances sur le service "mariadb".
#      - Redémarre le conteneur en cas d'échec.
#      - Monte le volume "wordpress" dans le conteneur pour héberger les fichiers WordPress.

# En résumé, ce fichier Docker Compose définit un environnement Docker complet avec un serveur Nginx, une base de données MariaDB et un serveur WordPress, tous interconnectés via un réseau Docker nommé "inception" et utilisant des volumes pour stocker les données persistantes.